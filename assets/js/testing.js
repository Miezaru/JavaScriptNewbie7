let test = 'asdddx'.replace(/asddd?x/g, '!');
// 0 or 1
test = 'asdddx'.replace(/asd+x/g, '!');
// 1 и более
test = 'asdddx'.replace(/asd*x/g, '!');
// 0 или более

test = 'a+x ax aax aaax'.replace(/a\+x/g, '!');
test = 'a.x asx aax a.xas'.replace(/a\.x/g, '!');
// Обратный слеш

// Спец символы $ ^ . * + ? \ {} [] () |
// Не являются спецсимволами: @ : , ' " ; - _ = < > % # ~ ` & ! /
text = 'a23e4x qw x e'.replace(/a.+x/g, '!');
// Ограничение жадности

text = 'a23e4x qw x e'.replace(/a.+?x/g, '!');
// Ограничили жадность

// оператор повторения {5} - пять повторений {2,5} - от двух до пяти {2,} - от двух два и более раз, первый параметр пропустить нельзя, но ноль первым параметром допустим

test = 'xx xax xaax xaaax'.replace(/xa{1,2}x/g, '!');
text = 'xx xax xaax xaaax'.replace(/xa{2,}x/g, '!');
// а 1 или 2 раза

// Группы символов \s \S \w \W \d \D

// \s - все пробельные символы, через пустые строки не проходит
// \S - все не пробельные символы
// \w - любая буква и цифра
// \W - не буква и не число (символы)
// \d - число
// \D - не число

// Квадратные скобки ['или']
test = 'axx bxx cxx exx'.replace(/[abc]xx/g, '!'); // ! ! ! exx
// либо 'a', либо 'b', либо 'c'
test = 'axx bxx cxx exx'.replace(/[^abc]xx/g, ''); // axx bxx cxx
// не 'a', не 'b', не 'c'

// В диапазоне a-z ==> [a-zA-Z0-9а-яёЁ] == \w но с учетом кирилицы
// Шляпка - спецсимвол отвечающий за 'все кроме' внутри [](снаружи тоже) она спецсимвол только вначале, снаружи уже нет
// Символ '-' это спецсимвол разделитель только внутри [](снаружи НЕТ!
// Спецсимволы внутри [] не надо экранировать
// Исключение из предыдущего правила - это '^' и '-' ([] - тоже надо экранировать)
test = 'axx 0xx -xx @xx'.replace(/[a-z-0-9]xx/g, '!'); // ! ! @xx
// z-0 не могут образовать группу

// '^' - начало строки ( если вне квадратных скобок)
// '$' - конец строки
// ^as$ - проверяем всю строку

test = '<div class="item-price">$599 <sup>25</sup></div>';

test = +test.replace(/^.*\$(\d+)\s\D+(\d+).*$/, '$1.$2');

// $` - часть строки до совпадения
// $' ($\') - часть строки после совпадения
// $& - все найденное совпадение
// $$ - знак доллара ( чтобы не выполнялось преобразование кармана в значении, а вывелся некий номер после знака $);(номер кармана)

test = 'ababx abe'.replace(/(?:ab)+([a-z])/g, '!$1!');
// (?:) - пропускает карман, $1 - изменяет номер кармана (!$1! = !x! !e!)
// + не множит карматы, 'abab' превратится в '!', а не в '!!' (cм. урок)

test = 'aaax aaab'.replace(/aaa(?=x)/g, '!'); // !x
// позитивный и негативный просмотр
// (?=) - позитивный просмотр вперед, x должет быть, только тогда произойдет замена
// (?!) - негативный просмотр вперед
// для того что-бы заглянуть влево (?<=) и (?<!)
// изменить все что до 'x'
test = 'aaax aaab'.replace(/aaa(?!x)/g, '!'); // !b

// Приемы
test = '2 3 4 5'.replace(/\d+/g, (item) => item * item);

test = '2+3= .... 25+50='.replace(/(\d+)\+(\d+)=/g, (item1, item2, item3) => {
  let sum = +item2 + +item3;
  return (item1 += sum);
});
// распарсили строку и вернули 2+3=5 .... 25+50=75;
console.log(test);
